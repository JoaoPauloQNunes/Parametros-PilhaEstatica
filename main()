#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define TAMANHO 100

typedef struct {
    int topo;
    char dados[TAMANHO];
} Pilha;

void criar(Pilha* pilha) {
    pilha->topo = -1;
}

int estaVazia(Pilha* pilha) {
    return pilha->topo == -1;
}

int estaCheia(Pilha* pilha) {
    return pilha->topo == TAMANHO - 1;
}

int empilhar(Pilha* pilha, char elemento) {
    if (estaCheia(pilha)) {
        printf("Pilha cheia.\n");
        return 0;
    }
    pilha->dados[++pilha->topo] = elemento;
    return 1;
}

int desempilhar(Pilha* pilha) {
    if (estaVazia(pilha)) {
        return 0;
    }
    pilha->topo--;
    return 1;
}

int parametro(char* expressao) {
    Pilha pilha;
    criar(&pilha);

    for (int i = 0; expressao[i] != '\0'; i++) {
        if (expressao[i] == '(') {
            empilhar(&pilha, '(');
        } else if (expressao[i] == ')') {
            if (!desempilhar(&pilha)) {
                return 0;
            }
        }
    }

    return estaVazia(&pilha);
}

int main() {
    char expressao[TAMANHO];

    printf("Digite a expressao: ");
    fgets(expressao, TAMANHO, stdin);

    expressao[strcspn(expressao, "\n")] = '\0';

    if (parametro(expressao)) {
        printf("Esta balanceada.\n");
    } else {
        printf("Esta desbalanceada.\n");
    }

    return 0;
}
